选择器分为基础选择器和复合选择器两大类

1.基础选择器
    基础选择器是由单个选择器组成的
    包括标签选择器，类选择器，id选择器和通配符选择器

    类选择器--多类名。即可以给一个标签指定多个类名。

    id选择器与类选择器的区别
    1.类选择器可以被重复使用，id选择器只能使用一次
    2.类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，经常和js搭配使用

    通配符选择器
    通配符选择器使用"*"定义，它表示选取页面中所有元素（特殊情况下使用）
    例：
    * {
        color: red; //把html,body以及Body里的所有元素设置颜色为红色
    }

2.复合选择器
    复合选择器是对基础选择器进行组合形成的
    复合选择器可以更准确，高效地选择标签
    常用的复合选择器包括后代选择器，子选择器，并集选择器，伪类选择器
    
    后代选择器（重要）
    后代选择器又称包含选择器，可以选择父元素里的子元素，其写法就是把外层标签写在前面，内层标签
    写在后面，中间用*空格分隔*。当标签发生嵌套时，内层标签就成为外层标签的后代。
    语法： 元素1 元素2 { 样式声明 }
    元素1必须是父级，元素2必须是子级，最终选的是元素2
    元素2可以是儿子或者孙子，只要是后代均可
    元素1和元素2不仅可以为标签，也可以是其他的基础选择器

    子选择器（重要）
    子选择器只能选择作为某元素的最近一级子元素。简单理解就是选“亲儿子”元素
    语法 元素1>元素2 {样式声明}
    元素1必须是父级，元素2必须是子级，最终选的是元素2
    元素2必须是亲儿子，其孙子，重孙子都不归他管

    并集选择器（重要）
    并集选择器可以选择多组标签，同时为他们定义相同的样式。
    并集选择器是各选择器通过英文逗号（,）连接而成，任何形式的选择器都可以作为并集选择器的一部分
    语法 元素1，元素2，.. { 样式声明 }
    元素1和元素2中间用逗号隔开
    逗号可以理解为和的意思
    并集选择器通常用于集体声明

    伪类选择器（理解）
    伪类选择器用于向某些选择器添加特殊效果，比如给链接添加特殊效果
    书写伪类选择器的最大特点是用冒号（:）表示，比如:hover
    书写链接伪类选择器时必须按照lvha的顺序，lvha=>love hate
    